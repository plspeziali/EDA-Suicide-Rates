rename(WorldRegion = ParentLocation,
Country = Location,
Year = Period,
Sex = Dim1,
Value = FactValueNumeric)
head(sc_data_R)
names(sc_data_R)
summary(sc_data_R)
# Look for null values in the feature 'Value'
any(is.na(sc_data_R$Value))
# No null values
# Calculate no. of years for every country
year_count <- sc_data_R %>%
group_by(Country) %>%
summarise(NumYears = n_distinct(Year))
# Check if every country has got the same no. of years
all(year_count$NumYears == max(year_count$NumYears))
# Every country has got the same number of years
# Aggregate Sex values in the same WorldRegion + Country + Year row
sc_data_R <- dcast(sc_data_R, WorldRegion + Country + Year ~ Sex, value.var = "Value", fun.aggregate = sum)
# Sort the dataset by WorldRegion + Country + Year
sc_data_R <- sc_data_R[order(sc_data_R$WorldRegion, sc_data_R$Country, sc_data_R$Year), ]
# ** Exploratory Analysis Begin **
#Check the distribution of values
hist(sc_data_R$value, breaks = 20, main = "Value distribution", xlab = "Value", cex.main = 1.15, cex.lab = 1.15)
View(sc_data_R)
View(sc_data_R)
hist(sc_data_R$value, breaks = 20, main = "Value distribution", xlab = "Both Sexes", cex.main = 1.15, cex.lab = 1.15)
hist(sc_data_R$value, breaks = 20, main = "Value distribution", xlab = "Both sexes", cex.main = 1.15, cex.lab = 1.15)
sc_data_R <- sc_data_R %>% rename(Total = 'Both sexes')
#Check the distribution of values
hist(sc_data_R$Total, breaks = 20, main = "Value distribution", xlab = "Value", cex.main = 1.15, cex.lab = 1.15)
##Explore "sex" feature
boxplot(value ~ Total, data = sc_data_R, main = "Differences in new infections between males and females",
xlab = "Sex", ylab = "Value", col = "green")
head(sc_data_R)
ggplot(data = sc_data_R, aes(x = WorldRegion, y = c(Female, Male))) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male per WorldRegion",
y = "Valore") +
theme_minimal()
# Crea un nuovo dataframe con le colonne "Female" e "Male" impilate
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_minimal()
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_minimal()+
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
library(tidyverse)
library(tidyverse)
library(hrbrthemes)
library(viridis)
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_minimal()+
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
#Check the distribution of values
hist(sc_data_R$Total, breaks = 20, main = "Value distribution", xlab = "Value", cex.main = 1.15, cex.lab = 1.15)
# Crea un nuovo dataframe con le colonne "Female" e "Male" impilate
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_minimal()
ggplot(data = subset_data, aes(x = reorder(Country, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Distribuzione di Total per Paese",
x = "Paesi", y = "Total") +
coord_flip() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sc_data_R, aes(x = reorder(Country, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Distribuzione di Total per Paese",
x = "Paesi", y = "Total") +
coord_flip() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sc_data_R, aes(x = reorder(WorldRegion, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Distribuzione di Total per Regione",
x = "Regione", y = "Total") +
coord_flip() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = tuo_dataset, aes(x = WorldRegion, y = c(Female, Male))) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male per WorldRegion",
y = "Valore") +
theme_minimal()
ggplot(data = sc_data_R, aes(x = WorldRegion, y = c(Female, Male))) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male per WorldRegion",
y = "Valore") +
theme_minimal()
ggplot(data = sc_data_R, aes(x = WorldRegion, y = Total)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male per WorldRegion",
y = "Valore") +
theme_minimal()
ggplot(data = tuo_dataset, aes(x = WorldRegion, y = c(Male, Female))) +
geom_boxplot(aes(fill = factor(variable))) +
labs(title = "Distribuzione di Male e Female per Regione del Mondo",
x = "Regione del Mondo", y = "Valore") +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
theme_minimal() +
theme(legend.title = element_blank()) +
guides(fill = guide_legend(title = "Genere"))
ggplot(data = sc_data_R, aes(x = WorldRegion, y = c(Male, Female))) +
geom_boxplot(aes(fill = factor(variable))) +
labs(title = "Distribuzione di Male e Female per Regione del Mondo",
x = "Regione del Mondo", y = "Valore") +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
theme_minimal() +
theme(legend.title = element_blank()) +
guides(fill = guide_legend(title = "Genere"))
ggplot(data = sc_data_R, aes(x = WorldRegion, y = c(Male, Female))) +
geom_boxplot(aes(fill = factor(WorldRegion))) +
labs(title = "Distribuzione di Male e Female per Regione del Mondo",
x = "Regione del Mondo", y = "Valore") +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
theme_minimal() +
theme(legend.title = element_blank()) +
guides(fill = guide_legend(title = "Genere"))
# Crea un boxplot per "Male" e "Female" per ogni regione del mondo
ggplot(data = tuo_dataset, aes(x = WorldRegion, y = Total, fill = factor(WorldRegion))) +
geom_boxplot() +
labs(title = "Distribuzione di Male e Female per Regione del Mondo",
x = "Regione del Mondo", y = "Valore") +
scale_fill_brewer(palette = "Set3") +  # Cambia la palette dei colori a tuo piacimento
theme_minimal()
# Crea un boxplot per "Male" e "Female" per ogni regione del mondo
ggplot(data = sc_data_R, aes(x = WorldRegion, y = Total, fill = factor(WorldRegion))) +
geom_boxplot() +
labs(title = "Distribuzione di Male e Female per Regione del Mondo",
x = "Regione del Mondo", y = "Valore") +
scale_fill_brewer(palette = "Set3") +  # Cambia la palette dei colori a tuo piacimento
theme_minimal()
stacked_data <- melt(tuo_dataset, id.vars = "WorldRegion")
stacked_data <- melt(sc_data_R, id.vars = "WorldRegion")
# Crea un boxplot separato per "Male" e "Female" per ogni regione del mondo
ggplot(data = stacked_data, aes(x = WorldRegion, y = value, fill = variable)) +
geom_boxplot() +
labs(title = "Distribuzione di Male e Female per Regione del Mondo",
x = "Regione del Mondo", y = "Valore") +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
theme_minimal()
hist(sc_data_R$Total, breaks = 20, main = "Value distribution", xlab = "Value", cex.main = 1.15, cex.lab = 1.15)
# Crea un nuovo dataframe con le colonne "Female" e "Male" impilate
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_minimal()
library(kableExtra)
library(car)
library(dplyr)
library(reshape2)
library(ggplot2)
library(vioplot)
library(sf)
library(gridExtra)
# Crea un nuovo dataframe con le colonne "Female" e "Male" impilate
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_minimal()
# Crea un nuovo dataframe con le colonne "Female" e "Male" impilate
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_ipsum()
library(tidyverse)
library(hrbrthemes)
library(viridis)
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Crea un boxplot con le colonne "Female" e "Male" sulle ascisse
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Genere",
y = "Valore") +
theme_ipsum()
# stack features "Female" and "Male"
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
theme_ipsum()
warnings()
# stack features "Female" and "Male"
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
theme_minimal()
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values fill = ind)) +
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values, fill = ind)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
theme_minimal()
# stack features "Female" and "Male"
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values, fill = ind)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "lightblue", "Female" = "pink")) +
theme_minimal()
data_2019 <- sc_data_R[sc_data_R$Year == 2019, ]
# stack features "Female" and "Male"
stacked_data <- stack(data_2019[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values, fill = ind)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "lightblue", "Female" = "pink")) +
theme_minimal()
hist(sc_data_R$Total, breaks = 20, main = "Value distribution", xlab = "Value", cex.main = 1.15, cex.lab = 1.15)
gc()
library(kableExtra)
library(car)
library(dplyr)
library(reshape2)
library(ggplot2)
library(vioplot)
library(sf)
library(gridExtra)
library(tidyverse)
library(hrbrthemes)
library(viridis)
## Changing Working Directory and Reading Dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
sc_data <- read.csv("./dataset/suicide_crude.csv", header = TRUE, sep = ",")
head(sc_data)
names(sc_data)
summary(sc_data)
## Loading dependencies
library(kableExtra)
library(car)
library(dplyr)
library(reshape2)
library(ggplot2)
library(vioplot)
library(sf)
library(gridExtra)
library(tidyverse)
library(hrbrthemes)
library(viridis)
## Changing Working Directory and Reading Dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
sc_data <- read.csv("./dataset/suicide_crude.csv", header = TRUE, sep = ",")
head(sc_data)
names(sc_data)
summary(sc_data)
# Check if some columns contain interesting information
sc_data_ValueType <- unique(sc_data$ValueType)
length_of_ValueType <- length(sc_data_ValueType)
# ValueType doesn't
sc_data_Period <- unique(sc_data$Period.type)
length_of_Period <- length(sc_data_Period)
# Period.type doesn't
sc_data_Location <- unique(sc_data$Location.type)
length_of_Location <- length(sc_data_Location)
# Location.type doesn't
sc_data_Dim1 <- unique(sc_data$Dim1.type)
length_of_Dim1 <- length(sc_data_Dim1)
# Dim1.type doesn't
sc_data_Dim2 <- unique(sc_data$Dim2.type)
length_of_Dim2 <- length(sc_data_Dim2)
# Dim1.type doesn't
# We can remove all five
# Remove uninteresting columns
to_select <-
c("ParentLocation","Location","Period","IsLatestYear","Dim1","FactValueNumeric");
sc_data_R <- sc_data[ , (names(sc_data) %in% to_select)]
head(sc_data_R)
names(sc_data_R)
summary(sc_data_R)
# Rename columns
sc_data_R <- sc_data_R %>%
rename(WorldRegion = ParentLocation,
Country = Location,
Year = Period,
Sex = Dim1,
Value = FactValueNumeric)
head(sc_data_R)
names(sc_data_R)
summary(sc_data_R)
# Look for null values in the feature 'Value'
any(is.na(sc_data_R$Value))
# No null values
# Calculate no. of years for every country
year_count <- sc_data_R %>%
group_by(Country) %>%
summarise(NumYears = n_distinct(Year))
# Check if every country has got the same no. of years
all(year_count$NumYears == max(year_count$NumYears))
# Every country has got the same number of years
# Aggregate Sex values in the same WorldRegion + Country + Year row
sc_data_R <- dcast(sc_data_R, WorldRegion + Country + Year ~ Sex, value.var = "Value", fun.aggregate = sum)
# Sort the dataset by WorldRegion + Country + Year
sc_data_R <- sc_data_R[order(sc_data_R$WorldRegion, sc_data_R$Country, sc_data_R$Year), ]
sc_data_R <- sc_data_R %>% rename(Total = 'Both sexes')
View(sc_data_R)
View(sc_data_R)
hist(sc_data_R$Total, breaks = 20, main = "Value distribution", xlab = "Value", cex.main = 1.15, cex.lab = 1.15)
data_2019 <- sc_data_R[sc_data_R$Year == 2019, ]
# stack features "Female" and "Male"
stacked_data <- stack(data_2019[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values, fill = ind)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "lightblue", "Female" = "pink")) +
theme_minimal()
# stack features "Female" and "Male"
stacked_data <- stack(sc_data_R[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values, fill = ind)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "lightblue", "Female" = "pink")) +
theme_minimal()
sc_data_R.head()
head(sc_data_R)
## Loading dependencies
library(kableExtra)
library(car)
library(dplyr)
library(reshape2)
library(ggplot2)
library(vioplot)
library(sf)
library(gridExtra)
library(tidyverse)
library(hrbrthemes)
library(viridis)
## Changing Working Directory and Reading Dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
sc_data <- read.csv("./dataset/suicide_crude.csv", header = TRUE, sep = ",")
head(sc_data)
names(sc_data)
summary(sc_data)
# Check if some columns contain interesting information
sc_data_ValueType <- unique(sc_data$ValueType)
length_of_ValueType <- length(sc_data_ValueType)
# ValueType doesn't
sc_data_Period <- unique(sc_data$Period.type)
length_of_Period <- length(sc_data_Period)
# Period.type doesn't
sc_data_Location <- unique(sc_data$Location.type)
length_of_Location <- length(sc_data_Location)
# Location.type doesn't
sc_data_Dim1 <- unique(sc_data$Dim1.type)
length_of_Dim1 <- length(sc_data_Dim1)
# Dim1.type doesn't
sc_data_Dim2 <- unique(sc_data$Dim2.type)
length_of_Dim2 <- length(sc_data_Dim2)
# Dim1.type doesn't
# We can remove all five
# Remove uninteresting columns
to_select <-
c("ParentLocation","Location","Period","IsLatestYear","Dim1","FactValueNumeric");
sc_data_R <- sc_data[ , (names(sc_data) %in% to_select)]
head(sc_data_R)
names(sc_data_R)
summary(sc_data_R)
# Rename columns
sc_data_R <- sc_data_R %>%
rename(WorldRegion = ParentLocation,
Country = Location,
Year = Period,
Sex = Dim1,
Value = FactValueNumeric)
head(sc_data_R)
names(sc_data_R)
summary(sc_data_R)
# Look for null values in the feature 'Value'
any(is.na(sc_data_R$Value))
# No null values
# Calculate no. of years for every country
year_count <- sc_data_R %>%
group_by(Country) %>%
summarise(NumYears = n_distinct(Year))
# Check if every country has got the same no. of years
all(year_count$NumYears == max(year_count$NumYears))
# Every country has got the same number of years
# Aggregate Sex values in the same WorldRegion + Country + Year row
sc_data_R <- dcast(sc_data_R, WorldRegion + Country + Year ~ Sex, value.var = "Value", fun.aggregate = sum)
# Sort the dataset by WorldRegion + Country + Year
sc_data_R <- sc_data_R[order(sc_data_R$WorldRegion, sc_data_R$Country, sc_data_R$Year), ]
sc_data_R <- sc_data_R %>% rename(Both = 'Both sexes')
# ** Exploratory Analysis Begin **
# Hist of both sexes
hist(sc_data_R$Both, breaks = 20, main = "Value distribution", xlab = "Value", cex.main = 1.15, cex.lab = 1.15)
# Female/Male values boxplot for all years
stacked_data <- stack(sc_data_R[c("Female", "Male")])
ggplot(data = stacked_data, aes(x = ind, y = values, fill = ind)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "lightblue", "Female" = "pink")) +
theme_minimal()
# Female/Male values boxplot only for the latest year (2019)
data_2019 <- sc_data_R[sc_data_R$Year == 2019, ]
# stack features "Female" and "Male"
stacked_data <- stack(data_2019[c("Female", "Male")])
# Create Male/Female boxplot
ggplot(data = stacked_data, aes(x = ind, y = values, fill = ind)) +
geom_boxplot() +
labs(title = "Distribuzione di Female e Male",
x = "Sex",
y = "Value") +
scale_fill_manual(values = c("Male" = "lightblue", "Female" = "pink")) +
theme_minimal()
ggplot(data = tuo_dataset, aes(x = Year, y = Both)) +
geom_boxplot() +
labs(title = "Boxplot di Total per Anno",
x = "Anno", y = "Total") +
theme_minimal()
ggplot(data = sc_data_R, aes(x = Year, y = Both)) +
geom_boxplot() +
labs(title = "Boxplot di Total per Anno",
x = "Anno", y = "Total") +
theme_minimal()
ggplot(data = sc_data_R, aes(x = factor(Year), y = Both)) +
geom_boxplot() +
labs(title = "Boxplot di Total per Anno",
x = "Anno", y = "Total") +
theme_minimal()
